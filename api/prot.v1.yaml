openapi: 3.0.0
info:
  title: prot
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/user/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/user.v1.json
        '404':
          description: Not Found
    delete:
      summary: ''
      operationId: 'delete-user-{username}'
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
  /user:
    post:
      summary: ''
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
  '/user/{username}/tasks':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/task.v1.json
  '/user/{developer}/form':
    parameters:
      - schema:
          type: string
        name: developer
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: 'Returns all the developer, forms_names submited'
                items:
                  type: string
    post:
      summary: ''
      operationId: 'post-user-{developer}-form'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '406':
          description: Not Acceptable
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                json_str:
                  type: string
  '/user/{developer}/form/{formId}':
    parameters:
      - schema:
          type: string
        name: developer
        in: path
        required: true
      - schema:
          type: integer
        name: formId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties: {}
  '/user/{username}/apps':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
  '/user/{username}/apps/{installAppId}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
      - schema:
          type: integer
        name: installAppId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      description: ''
  '/user/{username}/questionary/{appId}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
      - schema:
          type: integer
        name: appId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_question:
                    type: string
                  hints:
                    type: string
                required:
                  - current_question
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Returns the current question pending to be responded
    post:
      summary: ''
      operationId: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                restart:
                  type: boolean
                response:
                  type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /apps:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/prot_app_info.v1.json
  '/apps/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/prot_app_info.v1.json
        '404':
          description: Not Found
      description: ''
components:
  schemas: {}
