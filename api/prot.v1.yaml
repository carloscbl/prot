openapi: 3.0.0
info:
  title: prot
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/user/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/user.v1.json
        '404':
          description: Not Found
    delete:
      summary: ''
      operationId: 'delete-user-{username}'
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
  /user:
    post:
      summary: ''
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
  '/user/{username}/tasks':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/task.v1.json
      operationId: 'get-user-{username}-task'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: integer
                to:
                  type: integer
  '/user/{developer}/form':
    parameters:
      - schema:
          type: string
        name: developer
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: 'Returns all the developer, forms_names submited'
                items:
                  type: string
      operationId: 'get-user-{developer}-form'
    post:
      summary: ''
      operationId: 'post-user-{developer}-form'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '406':
          description: Not Acceptable
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                json_str:
                  type: string
                '':
                  type: string
  '/user/{developer}/form/{form_name}':
    parameters:
      - schema:
          type: string
        name: developer
        in: path
        required: true
      - schema:
          type: string
        name: form_name
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: 'get-user-{developer}-form-{form_name}'
  '/user/{username}/apps':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
      operationId: 'get-user-{username}-apps'
  '/user/{username}/apps/{install_app_id}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
      - schema:
          type: string
        name: install_app_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
      operationId: 'get-user-{username}-apps-{install_app_id}'
  '/user/{username}/questionary/{app_id}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
      - schema:
          type: string
        name: app_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_question:
                    type: string
                  answer_type:
                    type: string
                  hints:
                    type: string
                  '':
                    type: string
                required:
                  - current_question
                  - answer_type
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: 'get-user-{username}-questionary-{app_id}'
    post:
      summary: ''
      operationId: 'post-user-{username}-questionary-{app_id}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                restart:
                  type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /apps:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    picture:
                      type: string
                    price:
                      type: number
                    tags:
                      type: array
                      items:
                        type: string
                    '':
                      type: string
      operationId: get-apps
  '/apps/{app_id}':
    parameters:
      - schema:
          type: string
        name: app_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  picture:
                    type: string
                  starts:
                    type: number
                  tags:
                    type: string
                  developer:
                    type: string
                  description:
                    type: string
                  downloads:
                    type: integer
                required:
                  - name
        '404':
          description: Not Found
      operationId: 'get-apps-{app_id}'
components:
  schemas: {}
