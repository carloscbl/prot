At the most high level, there is the app:
A file designed to hold all the machine state and its
relations with the next steps in the states machine

being the follow estructure a good example

you can take as example washclothes.json

in which you can have the follow sections:

app : The general meta data about the app, owner, name, estructure
expressions: where you especifies the functions and its arguments
variables: where put your constants
configurables: where you declare which ones are customizables by the final user
questions: it is a decision tree with questions and posible flow answers, that points to the next Q/A or exit
  questions_extended: 
   id: unique id of a node(QA's),
   question: the output text to the user
   answer_tag: the tag that bring info, that you can use in the future to dont repeat questions of similar apps
   type: the data type expected of answer INTEGER | BOOL | FLOAT
   mode: this states some flow meta that will alter the flow for special cases
    sequential: means it follows a normal flow,
    if_error_repeat: means if the answer given is not suitable as the "type" given will repeat the question not exit
    once: means if the answer fails wont repeat
  taskstorys: the array of posible taskstory to perform after get the current answer if the select meets or is specified the tag("taskstorys") optional, not all branches have to perform a taskstory
    branch_id: select by the posible answer given, if not given, will take the branch id with 0 as id
    taskstory: a sucession of commands that will represent as tasks the choices of the user by a given branch_id
      command: the command to evaluate and perform
      name: the key to find or refer to this command in this app
    branch_id: tasktory correspond to the given branch_id as answer
  answers_branches: you can define the answer that will enroute the next branch to follow
    custom: you can define any string that you want
    range[]: you can set a group of ranges matching the numeric values and its possible routes
      values:
        <: less than
        >: greater than
        >=: greater or equal than
        <=: less or equal than
      if_branch: next node to follow
      id: answer id to select a taskstory in the taskstorys


