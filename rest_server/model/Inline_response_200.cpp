/**
* prot
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Inline_response_200.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Inline_response_200::Inline_response_200()
{
    m_Current_question = "";
    m_Answer_type = "";
    m_Hints = "";
    m_HintsIsSet = false;
    m_ = "";
    m_IsSet = false;
    
}

Inline_response_200::~Inline_response_200()
{
}

void Inline_response_200::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const Inline_response_200& o)
{
    j = nlohmann::json();
    j["current_question"] = o.m_Current_question;
    j["answer_type"] = o.m_Answer_type;
    if(o.hintsIsSet())
        j["hints"] = o.m_Hints;
    if(o.IsSet())
        j[""] = o.m_;
}

void from_json(const nlohmann::json& j, Inline_response_200& o)
{
    j.at("current_question").get_to(o.m_Current_question);
    j.at("answer_type").get_to(o.m_Answer_type);
    if(j.find("hints") != j.end())
    {
        j.at("hints").get_to(o.m_Hints);
        o.m_HintsIsSet = true;
    } 
    if(j.find("") != j.end())
    {
        j.at("").get_to(o.m_);
        o.m_IsSet = true;
    } 
}

std::string Inline_response_200::getCurrentQuestion() const
{
    return m_Current_question;
}
void Inline_response_200::setCurrentQuestion(std::string const& value)
{
    m_Current_question = value;
}
std::string Inline_response_200::getAnswerType() const
{
    return m_Answer_type;
}
void Inline_response_200::setAnswerType(std::string const& value)
{
    m_Answer_type = value;
}
std::string Inline_response_200::getHints() const
{
    return m_Hints;
}
void Inline_response_200::setHints(std::string const& value)
{
    m_Hints = value;
    m_HintsIsSet = true;
}
bool Inline_response_200::hintsIsSet() const
{
    return m_HintsIsSet;
}
void Inline_response_200::unsetHints()
{
    m_HintsIsSet = false;
}
std::string Inline_response_200::get() const
{
    return m_;
}
void Inline_response_200::set(std::string const& value)
{
    m_ = value;
    m_IsSet = true;
}
bool Inline_response_200::IsSet() const
{
    return m_IsSet;
}
void Inline_response_200::unset()
{
    m_IsSet = false;
}

}
}
}
}

