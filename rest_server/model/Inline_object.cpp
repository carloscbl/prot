/**
* prot
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Inline_object.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Inline_object::Inline_object()
{
    m_Forward_projection = 0;
    m_Forward_projectionIsSet = false;
    m_Backwards_projection = 0;
    m_Backwards_projectionIsSet = false;
    
}

Inline_object::~Inline_object()
{
}

void Inline_object::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const Inline_object& o)
{
    j = nlohmann::json();
    if(o.forwardProjectionIsSet())
        j["forward_projection"] = o.m_Forward_projection;
    if(o.backwardsProjectionIsSet())
        j["backwards_projection"] = o.m_Backwards_projection;
}

void from_json(const nlohmann::json& j, Inline_object& o)
{
    if(j.find("forward_projection") != j.end())
    {
        j.at("forward_projection").get_to(o.m_Forward_projection);
        o.m_Forward_projectionIsSet = true;
    } 
    if(j.find("backwards_projection") != j.end())
    {
        j.at("backwards_projection").get_to(o.m_Backwards_projection);
        o.m_Backwards_projectionIsSet = true;
    } 
}

int32_t Inline_object::getForwardProjection() const
{
    return m_Forward_projection;
}
void Inline_object::setForwardProjection(int32_t const value)
{
    m_Forward_projection = value;
    m_Forward_projectionIsSet = true;
}
bool Inline_object::forwardProjectionIsSet() const
{
    return m_Forward_projectionIsSet;
}
void Inline_object::unsetForward_projection()
{
    m_Forward_projectionIsSet = false;
}
int32_t Inline_object::getBackwardsProjection() const
{
    return m_Backwards_projection;
}
void Inline_object::setBackwardsProjection(int32_t const value)
{
    m_Backwards_projection = value;
    m_Backwards_projectionIsSet = true;
}
bool Inline_object::backwardsProjectionIsSet() const
{
    return m_Backwards_projectionIsSet;
}
void Inline_object::unsetBackwards_projection()
{
    m_Backwards_projectionIsSet = false;
}

}
}
}
}

